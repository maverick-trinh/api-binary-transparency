{
  "version": 3,
  "sources": ["../../../../src/contracts/walrus/events.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Module to emit events. Used to allow filtering all events in the Rust client (as\n * work-around for the lack of composable event filters).\n */\n\nimport { bcs } from '@mysten/sui/bcs';\nexport function BlobRegistered() {\n\treturn bcs.struct('BlobRegistered', {\n\t\tepoch: bcs.u32(),\n\t\tblob_id: bcs.u256(),\n\t\tsize: bcs.u64(),\n\t\tencoding_type: bcs.u8(),\n\t\tend_epoch: bcs.u32(),\n\t\tdeletable: bcs.bool(),\n\t\tobject_id: bcs.Address,\n\t});\n}\nexport function BlobCertified() {\n\treturn bcs.struct('BlobCertified', {\n\t\tepoch: bcs.u32(),\n\t\tblob_id: bcs.u256(),\n\t\tend_epoch: bcs.u32(),\n\t\tdeletable: bcs.bool(),\n\t\tobject_id: bcs.Address,\n\t\tis_extension: bcs.bool(),\n\t});\n}\nexport function BlobDeleted() {\n\treturn bcs.struct('BlobDeleted', {\n\t\tepoch: bcs.u32(),\n\t\tblob_id: bcs.u256(),\n\t\tend_epoch: bcs.u32(),\n\t\tobject_id: bcs.Address,\n\t\twas_certified: bcs.bool(),\n\t});\n}\nexport function InvalidBlobID() {\n\treturn bcs.struct('InvalidBlobID', {\n\t\tepoch: bcs.u32(),\n\t\tblob_id: bcs.u256(),\n\t});\n}\nexport function EpochChangeStart() {\n\treturn bcs.struct('EpochChangeStart', {\n\t\tepoch: bcs.u32(),\n\t});\n}\nexport function EpochChangeDone() {\n\treturn bcs.struct('EpochChangeDone', {\n\t\tepoch: bcs.u32(),\n\t});\n}\nexport function ShardsReceived() {\n\treturn bcs.struct('ShardsReceived', {\n\t\tepoch: bcs.u32(),\n\t\tshards: bcs.vector(bcs.u16()),\n\t});\n}\nexport function EpochParametersSelected() {\n\treturn bcs.struct('EpochParametersSelected', {\n\t\tnext_epoch: bcs.u32(),\n\t});\n}\nexport function ShardRecoveryStart() {\n\treturn bcs.struct('ShardRecoveryStart', {\n\t\tepoch: bcs.u32(),\n\t\tshards: bcs.vector(bcs.u16()),\n\t});\n}\nexport function ContractUpgraded() {\n\treturn bcs.struct('ContractUpgraded', {\n\t\tepoch: bcs.u32(),\n\t\tpackage_id: bcs.Address,\n\t\tversion: bcs.u64(),\n\t});\n}\nexport function RegisterDenyListUpdate() {\n\treturn bcs.struct('RegisterDenyListUpdate', {\n\t\tepoch: bcs.u32(),\n\t\troot: bcs.u256(),\n\t\tsequence_number: bcs.u64(),\n\t\tnode_id: bcs.Address,\n\t});\n}\nexport function DenyListUpdate() {\n\treturn bcs.struct('DenyListUpdate', {\n\t\tepoch: bcs.u32(),\n\t\troot: bcs.u256(),\n\t\tsequence_number: bcs.u64(),\n\t\tnode_id: bcs.Address,\n\t});\n}\nexport function DenyListBlobDeleted() {\n\treturn bcs.struct('DenyListBlobDeleted', {\n\t\tepoch: bcs.u32(),\n\t\tblob_id: bcs.u256(),\n\t});\n}\nexport function ContractUpgradeProposed() {\n\treturn bcs.struct('ContractUpgradeProposed', {\n\t\tepoch: bcs.u32(),\n\t\tpackage_digest: bcs.vector(bcs.u8()),\n\t});\n}\nexport function ContractUpgradeQuorumReached() {\n\treturn bcs.struct('ContractUpgradeQuorumReached', {\n\t\tepoch: bcs.u32(),\n\t\tpackage_digest: bcs.vector(bcs.u8()),\n\t});\n}\n"],
  "mappings": "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",
  "names": []
}
