export declare function ProofOfPossessionMessage(): import("@mysten/sui/bcs").BcsType<{
    intent_type: number;
    intent_version: number;
    intent_app: number;
    epoch: number;
    sui_address: string;
    bls_key: number[];
}, {
    intent_type: number;
    intent_version: number;
    intent_app: number;
    epoch: number;
    sui_address: string | Uint8Array<ArrayBufferLike>;
    bls_key: Iterable<number> & {
        length: number;
    };
}>;
export declare function CertifiedMessage(): import("@mysten/sui/bcs").BcsType<{
    intent_type: number;
    intent_version: number;
    cert_epoch: number;
    message: number[];
    stake_support: number;
}, {
    intent_type: number;
    intent_version: number;
    cert_epoch: number;
    message: Iterable<number> & {
        length: number;
    };
    stake_support: number;
}>;
export declare function CertifiedBlobMessage(): import("@mysten/sui/bcs").BcsType<{
    blob_id: string;
    blob_persistence_type: import("@mysten/bcs").EnumOutputShapeWithKeys<{
        Permanent: true;
        Deletable: {
            object_id: string;
        };
    }, "Permanent" | "Deletable">;
}, {
    blob_id: string | number | bigint;
    blob_persistence_type: import("@mysten/bcs").EnumInputShape<{
        Permanent: boolean | object | null;
        Deletable: {
            object_id: string | Uint8Array<ArrayBufferLike>;
        };
    }>;
}>;
export declare function CertifiedInvalidBlobId(): import("@mysten/sui/bcs").BcsType<{
    blob_id: string;
}, {
    blob_id: string | number | bigint;
}>;
export declare function DenyListUpdateMessage(): import("@mysten/sui/bcs").BcsType<{
    storage_node_id: string;
    deny_list_sequence_number: string;
    deny_list_size: string;
    deny_list_root: string;
}, {
    storage_node_id: string | Uint8Array<ArrayBufferLike>;
    deny_list_sequence_number: string | number | bigint;
    deny_list_size: string | number | bigint;
    deny_list_root: string | number | bigint;
}>;
export declare function DenyListBlobDeleted(): import("@mysten/sui/bcs").BcsType<{
    blob_id: string;
}, {
    blob_id: string | number | bigint;
}>;
/** The persistence type of a blob. Used for storage confirmation. */
export declare function BlobPersistenceType(): import("@mysten/sui/bcs").BcsType<import("@mysten/bcs").EnumOutputShapeWithKeys<{
    Permanent: true;
    Deletable: {
        object_id: string;
    };
}, "Permanent" | "Deletable">, import("@mysten/bcs").EnumInputShape<{
    Permanent: boolean | object | null;
    Deletable: {
        object_id: string | Uint8Array<ArrayBufferLike>;
    };
}>>;
