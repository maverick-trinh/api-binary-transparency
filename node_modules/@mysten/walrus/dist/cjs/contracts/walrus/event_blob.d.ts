export declare function EventBlobAttestation(): import("@mysten/sui/bcs").BcsType<{
    checkpoint_sequence_num: string;
    epoch: number;
}, {
    checkpoint_sequence_num: string | number | bigint;
    epoch: number;
}>;
export declare function EventBlob(): import("@mysten/sui/bcs").BcsType<{
    blob_id: string;
    ending_checkpoint_sequence_number: string;
}, {
    blob_id: string | number | bigint;
    ending_checkpoint_sequence_number: string | number | bigint;
}>;
export declare function EventBlobCertificationState(): import("@mysten/sui/bcs").BcsType<{
    latest_certified_blob: {
        blob_id: string;
        ending_checkpoint_sequence_number: string;
    } | null;
    aggregate_weight_per_blob: {
        contents: {
            key: {
                blob_id: string;
                ending_checkpoint_sequence_number: string;
            };
            value: number;
        }[];
    };
}, {
    latest_certified_blob: {
        blob_id: string | number | bigint;
        ending_checkpoint_sequence_number: string | number | bigint;
    } | null | undefined;
    aggregate_weight_per_blob: {
        contents: Iterable<{
            key: {
                blob_id: string | number | bigint;
                ending_checkpoint_sequence_number: string | number | bigint;
            };
            value: number;
        }> & {
            length: number;
        };
    };
}>;
