{
  "version": 3,
  "sources": ["../../../../../../src/contracts/walrus/deps/sui/package.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Functions for operating on Move packages from within Move:\n *\n * - Creating proof-of-publish objects from one-time witnesses\n * - Administering package upgrades through upgrade policies.\n */\n\nimport { bcs } from '@mysten/sui/bcs';\nimport * as object from './object.js';\nexport function Publisher() {\n\treturn bcs.struct('Publisher', {\n\t\tid: object.UID(),\n\t\tpackage: bcs.string(),\n\t\tmodule_name: bcs.string(),\n\t});\n}\nexport function UpgradeCap() {\n\treturn bcs.struct('UpgradeCap', {\n\t\tid: object.UID(),\n\t\t/** (Mutable) ID of the package that can be upgraded. */\n\t\tpackage: bcs.Address,\n\t\t/**\n\t\t * (Mutable) The number of upgrades that have been applied successively to the\n\t\t * original package. Initially 0.\n\t\t */\n\t\tversion: bcs.u64(),\n\t\t/** What kind of upgrades are allowed. */\n\t\tpolicy: bcs.u8(),\n\t});\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,iBAAoB;AACpB,aAAwB;AACjB,SAAS,YAAY;AAC3B,SAAO,eAAI,OAAO,aAAa;AAAA,IAC9B,IAAI,OAAO,IAAI;AAAA,IACf,SAAS,eAAI,OAAO;AAAA,IACpB,aAAa,eAAI,OAAO;AAAA,EACzB,CAAC;AACF;AACO,SAAS,aAAa;AAC5B,SAAO,eAAI,OAAO,cAAc;AAAA,IAC/B,IAAI,OAAO,IAAI;AAAA;AAAA,IAEf,SAAS,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA,IAKb,SAAS,eAAI,IAAI;AAAA;AAAA,IAEjB,QAAQ,eAAI,GAAG;AAAA,EAChB,CAAC;AACF;",
  "names": []
}
