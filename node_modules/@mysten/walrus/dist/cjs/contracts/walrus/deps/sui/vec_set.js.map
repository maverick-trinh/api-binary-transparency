{
  "version": 3,
  "sources": ["../../../../../../src/contracts/walrus/deps/sui/vec_set.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport { bcs } from '@mysten/sui/bcs';\nimport type { BcsType } from '@mysten/sui/bcs';\n/**\n * A set data structure backed by a vector. The set is guaranteed not to contain\n * duplicate keys. All operations are O(N) in the size of the set\n *\n * - the intention of this data structure is only to provide the convenience of\n *   programming against a set API. Sets that need sorted iteration rather than\n *   insertion order iteration should be handwritten.\n */\nexport function VecSet<K extends BcsType<any>>(...typeParameters: [K]) {\n\treturn bcs.struct('VecSet', {\n\t\tcontents: bcs.vector(typeParameters[0]),\n\t});\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,iBAAoB;AAUb,SAAS,UAAkC,gBAAqB;AACtE,SAAO,eAAI,OAAO,UAAU;AAAA,IAC3B,UAAU,eAAI,OAAO,eAAe,CAAC,CAAC;AAAA,EACvC,CAAC;AACF;",
  "names": []
}
