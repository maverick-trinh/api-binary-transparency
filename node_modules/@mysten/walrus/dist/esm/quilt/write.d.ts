import type { EncodingType } from '../types.js';
import type { QuiltPatchV1 } from '../utils/bcs.js';
interface QuiltBlob {
    contents: Uint8Array;
    identifier: string;
    tags?: Record<string, string>;
}
interface EncodeQuiltOptions {
    blobs: QuiltBlob[];
    numShards: number;
    encodingType?: EncodingType;
}
export declare function encodeQuilt({ blobs, numShards, encodingType }: EncodeQuiltOptions): {
    quilt: Uint8Array<ArrayBuffer>;
    index: {
        patches: (typeof QuiltPatchV1.$inferInput & {
            startIndex: number;
        })[];
    };
};
export {};
