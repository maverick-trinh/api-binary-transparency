import type { WalrusClient } from '../client.js';
export interface QuiltReaderOptions {
    client: WalrusClient;
    blobId: string;
    numShards: number;
    fullBlob?: Uint8Array;
}
export declare class QuiltReader {
    #private;
    blobId: string;
    constructor({ client, blobId, numShards, fullBlob }: QuiltReaderOptions);
    getFullBlob(): Promise<Uint8Array<ArrayBufferLike>>;
    readByPatchId(id: string): Promise<{
        identifier: string;
        tags: Record<string, string> | null;
        blobContents: Uint8Array<ArrayBuffer>;
    }>;
    readIndex(): Promise<{
        endIndex: number;
        identifier: string;
        tags: {
            [k: string]: string;
        };
        startIndex: number;
        patchId: string;
    }[]>;
}
