import { bcs } from "@mysten/sui/bcs";
function ActiveSetEntry() {
  return bcs.struct("ActiveSetEntry", {
    node_id: bcs.Address,
    staked_amount: bcs.u64()
  });
}
function ActiveSet() {
  return bcs.struct("ActiveSet", {
    /**
     * The maximum number of storage nodes in the active set. Potentially remove this
     * field.
     */
    max_size: bcs.u16(),
    /**
     * The minimum amount of staked WAL needed to enter the active set. This is used to
     * determine if a storage node can be added to the active set.
     */
    threshold_stake: bcs.u64(),
    /** The list of storage nodes in the active set and their stake. */
    nodes: bcs.vector(ActiveSetEntry()),
    /** The total amount of staked WAL in the active set. */
    total_stake: bcs.u64()
  });
}
export {
  ActiveSet,
  ActiveSetEntry
};
//# sourceMappingURL=active_set.js.map
