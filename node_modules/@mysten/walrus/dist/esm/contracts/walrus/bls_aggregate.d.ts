export declare function BlsCommitteeMember(): import("@mysten/sui/bcs").BcsType<{
    public_key: {
        bytes: number[];
    };
    weight: number;
    node_id: string;
}, {
    public_key: {
        bytes: Iterable<number> & {
            length: number;
        };
    };
    weight: number;
    node_id: string | Uint8Array<ArrayBufferLike>;
}>;
export declare function BlsCommittee(): import("@mysten/sui/bcs").BcsType<{
    members: {
        public_key: {
            bytes: number[];
        };
        weight: number;
        node_id: string;
    }[];
    n_shards: number;
    epoch: number;
    total_aggregated_key: {
        bytes: number[];
    };
}, {
    members: Iterable<{
        public_key: {
            bytes: Iterable<number> & {
                length: number;
            };
        };
        weight: number;
        node_id: string | Uint8Array<ArrayBufferLike>;
    }> & {
        length: number;
    };
    n_shards: number;
    epoch: number;
    total_aggregated_key: {
        bytes: Iterable<number> & {
            length: number;
        };
    };
}>;
/** The type of weight verification to perform. */
export declare function RequiredWeight(): import("@mysten/sui/bcs").BcsType<import("@mysten/bcs").EnumOutputShapeWithKeys<{
    Quorum: true;
    OneCorrectNode: true;
}, "Quorum" | "OneCorrectNode">, import("@mysten/bcs").EnumInputShape<{
    Quorum: boolean | object | null;
    OneCorrectNode: boolean | object | null;
}>>;
