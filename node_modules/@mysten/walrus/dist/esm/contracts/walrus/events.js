import { bcs } from "@mysten/sui/bcs";
function BlobRegistered() {
  return bcs.struct("BlobRegistered", {
    epoch: bcs.u32(),
    blob_id: bcs.u256(),
    size: bcs.u64(),
    encoding_type: bcs.u8(),
    end_epoch: bcs.u32(),
    deletable: bcs.bool(),
    object_id: bcs.Address
  });
}
function BlobCertified() {
  return bcs.struct("BlobCertified", {
    epoch: bcs.u32(),
    blob_id: bcs.u256(),
    end_epoch: bcs.u32(),
    deletable: bcs.bool(),
    object_id: bcs.Address,
    is_extension: bcs.bool()
  });
}
function BlobDeleted() {
  return bcs.struct("BlobDeleted", {
    epoch: bcs.u32(),
    blob_id: bcs.u256(),
    end_epoch: bcs.u32(),
    object_id: bcs.Address,
    was_certified: bcs.bool()
  });
}
function InvalidBlobID() {
  return bcs.struct("InvalidBlobID", {
    epoch: bcs.u32(),
    blob_id: bcs.u256()
  });
}
function EpochChangeStart() {
  return bcs.struct("EpochChangeStart", {
    epoch: bcs.u32()
  });
}
function EpochChangeDone() {
  return bcs.struct("EpochChangeDone", {
    epoch: bcs.u32()
  });
}
function ShardsReceived() {
  return bcs.struct("ShardsReceived", {
    epoch: bcs.u32(),
    shards: bcs.vector(bcs.u16())
  });
}
function EpochParametersSelected() {
  return bcs.struct("EpochParametersSelected", {
    next_epoch: bcs.u32()
  });
}
function ShardRecoveryStart() {
  return bcs.struct("ShardRecoveryStart", {
    epoch: bcs.u32(),
    shards: bcs.vector(bcs.u16())
  });
}
function ContractUpgraded() {
  return bcs.struct("ContractUpgraded", {
    epoch: bcs.u32(),
    package_id: bcs.Address,
    version: bcs.u64()
  });
}
function RegisterDenyListUpdate() {
  return bcs.struct("RegisterDenyListUpdate", {
    epoch: bcs.u32(),
    root: bcs.u256(),
    sequence_number: bcs.u64(),
    node_id: bcs.Address
  });
}
function DenyListUpdate() {
  return bcs.struct("DenyListUpdate", {
    epoch: bcs.u32(),
    root: bcs.u256(),
    sequence_number: bcs.u64(),
    node_id: bcs.Address
  });
}
function DenyListBlobDeleted() {
  return bcs.struct("DenyListBlobDeleted", {
    epoch: bcs.u32(),
    blob_id: bcs.u256()
  });
}
function ContractUpgradeProposed() {
  return bcs.struct("ContractUpgradeProposed", {
    epoch: bcs.u32(),
    package_digest: bcs.vector(bcs.u8())
  });
}
function ContractUpgradeQuorumReached() {
  return bcs.struct("ContractUpgradeQuorumReached", {
    epoch: bcs.u32(),
    package_digest: bcs.vector(bcs.u8())
  });
}
export {
  BlobCertified,
  BlobDeleted,
  BlobRegistered,
  ContractUpgradeProposed,
  ContractUpgradeQuorumReached,
  ContractUpgraded,
  DenyListBlobDeleted,
  DenyListUpdate,
  EpochChangeDone,
  EpochChangeStart,
  EpochParametersSelected,
  InvalidBlobID,
  RegisterDenyListUpdate,
  ShardRecoveryStart,
  ShardsReceived
};
//# sourceMappingURL=events.js.map
