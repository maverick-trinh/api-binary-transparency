{
  "version": 3,
  "sources": ["../../../../src/contracts/walrus/bls_aggregate.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport { bcs } from '@mysten/sui/bcs';\nimport * as group_ops from './deps/sui/group_ops.js';\nexport function BlsCommitteeMember() {\n\treturn bcs.struct('BlsCommitteeMember', {\n\t\tpublic_key: group_ops.Element(),\n\t\tweight: bcs.u16(),\n\t\tnode_id: bcs.Address,\n\t});\n}\nexport function BlsCommittee() {\n\treturn bcs.struct('BlsCommittee', {\n\t\t/** A vector of committee members */\n\t\tmembers: bcs.vector(BlsCommitteeMember()),\n\t\t/** The total number of shards held by the committee */\n\t\tn_shards: bcs.u16(),\n\t\t/** The epoch in which the committee is active. */\n\t\tepoch: bcs.u32(),\n\t\t/** The aggregation of public keys for all members of the committee */\n\t\ttotal_aggregated_key: group_ops.Element(),\n\t});\n}\n/** The type of weight verification to perform. */\nexport function RequiredWeight() {\n\treturn bcs.enum('RequiredWeight', {\n\t\t/** Verify that the signers form a quorum. */\n\t\tQuorum: null,\n\t\t/** Verify that the signers include at least one correct node. */\n\t\tOneCorrectNode: null,\n\t});\n}\n"],
  "mappings": "AAEA,SAAS,WAAW;AACpB,YAAY,eAAe;AACpB,SAAS,qBAAqB;AACpC,SAAO,IAAI,OAAO,sBAAsB;AAAA,IACvC,YAAY,UAAU,QAAQ;AAAA,IAC9B,QAAQ,IAAI,IAAI;AAAA,IAChB,SAAS,IAAI;AAAA,EACd,CAAC;AACF;AACO,SAAS,eAAe;AAC9B,SAAO,IAAI,OAAO,gBAAgB;AAAA;AAAA,IAEjC,SAAS,IAAI,OAAO,mBAAmB,CAAC;AAAA;AAAA,IAExC,UAAU,IAAI,IAAI;AAAA;AAAA,IAElB,OAAO,IAAI,IAAI;AAAA;AAAA,IAEf,sBAAsB,UAAU,QAAQ;AAAA,EACzC,CAAC;AACF;AAEO,SAAS,iBAAiB;AAChC,SAAO,IAAI,KAAK,kBAAkB;AAAA;AAAA,IAEjC,QAAQ;AAAA;AAAA,IAER,gBAAgB;AAAA,EACjB,CAAC;AACF;",
  "names": []
}
